{"version":3,"sources":["id-component/id-component.js","main-component/mainComponent.js","App.js","serviceWorker.js","index.js"],"names":["IdComponent","props","changedob","event","setState","Dob","target","value","changeaddress","address","changeemail","email","changenum","cellNumber","saveData","dat","editData","index","state","catagory","imageSaver","e","picture","URL","createObjectURL","files","delData","console","log","name","showEditdob","showEditAddres","showEditemail","showEditCellNumber","bind","className","onClick","fileIn","click","style","backgroundImage","this","hidden","onChange","type","ref","prev","React","Component","MainComponent","cat","temp","UserDataComplete","splice","parseInt","UserDataIncomplete","datName","data","completeTemp","push","currentPage","length","pageSize","renderOb","tempDatatoShow","key","start","end","lastPage","i","first","firstPage","last","currentPage2","paginationshift","prevCurentPage","renderPag","next","prev1","next1","lastpage","lastpage2","fetch","then","res","json","finalData","results","title","location","street","number","city","dob","date","cell","medium","id","renderDiv","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6131917a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./id-component.css\"\nexport default class IdComponent extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            picture : this.props.picture,\n            name : this.props.name,\n            address : this.props.address,\n            Dob : this.props.Dob,\n            email : this.props.email,\n            cellNumber : this.props.cellNumber,\n            showEditdob : false,\n            showEditAddres : false,\n            showEditemail : false,\n            showEditCellNumber : false,\n\n        }\n        this.saveData=this.saveData.bind(this);\n        this.changeaddress=this.changeaddress.bind(this);\n        this.changedob=this.changedob.bind(this);\n        this.changeemail=this.changeemail.bind(this);\n        this.changenum=this.changenum.bind(this);\n        this.delData=this.delData.bind(this);\n    }\n\n    changedob=(event)=>{\n        this.setState({Dob : event.target.value});\n    }\n    changeaddress=(event)=>{\n        this.setState({address : event.target.value});\n    }\n    changeemail=(event)=>{\n        this.setState({email : event.target.value});\n    }\n    changenum=(event)=>{\n        this.setState({cellNumber : event.target.value});\n    }\n    saveData=(dat)=>{\n        this.props.editData(dat , this.props.index , this.state[`${dat}`] , this.props.catagory );\n    }\n    imageSaver=(e)=>{\n        this.setState({picture : URL.createObjectURL(e.target.files[0])});\n        this.props.editData('picture' , this.props.index , URL.createObjectURL(e.target.files[0]) , this.props.catagory);\n    }\n    delData=()=>{\n        console.log(\"inside Card\");\n        this.props.delData(this.props.index , this.props.catagory);\n    }\n    render(){\n        return(\n            <div className='id_div '>\n                <div className=''>\n                <div className='border'>\n                    <div className='borderseg yellow'></div>\n                    <div className='borderseg orange'></div>\n                    <div className='borderseg brown'></div>\n                    <div className='borderseg red'></div>\n                </div>\n                \n                <div className=\"false\">\n                    <h3> Dummy Company Name</h3>\n                    <h4 className='rel'>Dummy Slogan</h4>    \n                </div>\n                <div className='border'>\n                        <div className='borderseg red'></div>\n                        <div className='borderseg brown'></div>\n                        <div className='borderseg orange'></div>\n                        <div className='borderseg yellow'></div>\n                </div>\n                <div onClick={() => {this.fileIn.click()}} className='photo' style={{backgroundImage : `url(\"${this.state.picture}\")`}}>\n                        <input hidden onChange={(e) => {this.imageSaver(e)}} type='file' ref={fileIn => this.fileIn = fileIn}></input>\n                    </div>\n                \n                </div>\n\n                <div className='name'>\n                    <h4>{this.state.name}</h4>\n                </div>\n\n                <div className='border'>\n                        <div className='borderseg red'></div>\n                        <div className='borderseg brown'></div>\n                        <div className='borderseg orange'></div>\n                        <div className='borderseg yellow'></div>\n                </div>\n                <div className='space'>\n\n                </div>\n                <div className='details'>\n                    <div className='red borderseg2 '></div>\n                    <div className='detailsBox'>\n                        <h4 onClick={() => { let prev = this.state.showEditdob; prev = !prev; this.setState({showEditdob : prev})}} >Date Of Birth : {this.state.Dob}</h4>\n                        <div>{(this.state.showEditdob) && (<div className='editSection'>\n                            <input type='text' onChange={this.changedob}></input>\n                            <button type='submit' onClick={() =>{this.saveData('Dob')}}>Edit</button>    \n                        </div>)}</div>\n                        <h4 onClick={() => {let prev = this.state.showEditAddres; prev = !prev; this.setState({showEditAddres : prev})}} >Address : {this.state.address}</h4>\n                        <div>{(this.state.showEditAddres) && (<div className='editSection'>\n                            <input type='text'onChange={this.changeaddress}></input>\n                            <button type = 'submit' onClick={()=>this.saveData('Address')} >Edit</button>    \n                        </div>)}</div>\n                        <h4 onClick={() => {let prev = this.state.showEditemail; prev = !prev; this.setState({showEditemail : prev})}} >Email : {this.state.email}</h4>\n                        <div>{ (this.state.showEditemail) && (<div className='editSection'>\n                            <input type='text' onChange={this.changeemail}></input>\n                            <button  type = 'submit' onClick={()=>this.saveData('email')} >Edit</button>    \n                        </div>)}</div>\n                        <h4  onClick={() => { let prev = this.state.showEditCellNumber; prev = !prev; this.setState({showEditCellNumber : prev})}} >Phone Number : {this.state.cellNumber}</h4>\n                        <div>{ (this.state.showEditCellNumber) && (<div className='editSection'>\n                            <input type='text'onChange={this.changenum}></input>\n                            <button  type = 'submit' onClick={()=>this.saveData('CellNumber')} >Edit</button>    \n                        </div>)}</div>\n                    </div>\n                    <div className='red borderseg2 '></div>\n                </div>\n                <div className='border'>\n                        <div className='borderseg red'></div>\n                        <div className='borderseg brown'></div>\n                        <div className='borderseg orange'></div>\n                        <div className='borderseg yellow'></div>\n                </div>\n                <div className='but' type = 'submit' onClick={()=> this.delData()} > \n                    Delete\n                </div>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport IdComponent from \"../id-component/id-component\"\nimport './main-component.css';\nexport default class MainComponent extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            UserDataComplete : [],\n            UserDataIncomplete : [],\n            currentPage : 1,\n            firstPage : 1,\n            pageSize : 2,\n            lastpage : 0,\n            currentPage2 : 1,\n            lastpage2 : 0\n        }\n        this.renderOb = this.renderOb.bind(this);\n        this.renderPag=this.renderPag.bind(this);\n        this.paginationshift=this.paginationshift.bind(this);\n        this.editData=this.editData.bind(this);\n        this.delData=this.delData.bind(this);\n    }\n    delData = (index , cat)=>{\n        if(cat === 1){\n            let temp = this.state.UserDataComplete;\n            temp.splice(parseInt(index) , 1);\n            this.setState({UserDataComplete : temp});\n        }else if(cat === 2){\n            let temp = this.state.UserDataIncomplete;\n            temp.splice(parseInt(index) , 1);\n            this.setState({UserDataIncomplete : temp});\n        } \n\n    }\n\n    editData = (datName , index , data , cat)=>{\n        if((datName === 'picture') && (parseInt(cat) === 2)){\n            let temp = this.state.UserDataIncomplete;\n            temp[parseInt(index)][`${datName}`] = data;\n            let completeTemp = this.state.UserDataComplete;\n            completeTemp.push(temp[parseInt(index)]);\n            temp.splice(parseInt(index) , 1);\n            this.setState({UserDataComplete : completeTemp , UserDataIncomplete : temp , currentPage : (completeTemp.length/this.state.pageSize)});\n\n\n        }\n        else\n        {\n            if(cat === 1){\n                console.log(data , index);\n                let temp = this.state.UserDataComplete;\n                temp[parseInt(index)][`${datName}`] = data;\n                this.setState({UserDataComplete : temp});\n            }\n            if(cat === 2){\n                console.log(data , index);\n                let temp = this.state.UserDataIncomplete;\n                temp[parseInt(index)][`${datName}`] = data;\n                this.setState({UserDataIncomplete : temp});\n                \n            }\n        }\n    }\n    componentDidMount(){\n        fetch('https://randomuser.me/api/?page=1&results=100').then(\n            res => res.json())\n            .then((data) => {\n                let finalData = [];\n                for(let i = 0 ; i < data.results.length/2 ; ++i){\n                    let temp = {};\n                    temp.name = data.results[i].name.title + \" \" + data.results[i].name.first + \" \" + data.results[i].name.last;\n                    temp.address = data.results[i].location.street.number + \" \" + data.results[i].location.street.name + \" \" + data.results[i].location.city + \" \" + data.results[i].location.state;\n                    temp.email = data.results[i].email;\n                    temp.Dob = data.results[i].dob.date;\n                    temp.cellNumber = data.results[i].cell;\n                    temp.picture =  data.results[i].picture.medium;\n                    finalData.push(temp);\n                }\n                this.setState({UserDataComplete : finalData});\n                finalData = [];\n                for(let i = data.results.length/2 ; i < data.results.length ; ++i){\n                    let temp = {};\n                    temp.name = data.results[i].name.title + \" \" + data.results[i].name.first + \" \" + data.results[i].name.last;\n                    temp.address = data.results[i].location.street.number + \" \" + data.results[i].location.street.name + \" \" + data.results[i].location.city + \" \" + data.results[i].location.state;\n                    temp.email = data.results[i].email;\n                    temp.Dob = data.results[i].dob.date;\n                    temp.cellNumber = data.results[i].cell;\n                    temp.picture = '';\n                    finalData.push(temp);\n                }\n                this.setState({UserDataIncomplete : finalData});\n            });\n    }\n    renderOb =  (cat) => {\n        if(cat === 1){\n            if(this.state.UserDataComplete[0]){\n                let tempDatatoShow = [];\n                tempDatatoShow.push(<div key='countComplete'><h3>Count : {this.state.UserDataComplete.length}</h3></div>);\n                let start = ((this.state.currentPage-1)*this.state.pageSize);\n                let end = start+this.state.pageSize;\n                let lastPage = this.state.UserDataComplete.length/this.state.pageSize\n                for(let i = start ; i < end ; ++i){\n                    tempDatatoShow.push(<IdComponent delData={this.delData} key={this.state.UserDataComplete[i].name + i}  catagory={cat} index={i} editData={this.editData} first={this.state.firstPage} last={lastPage} currentPage={this.state.currentPage} name={this.state.UserDataComplete[i].name} address={this.state.UserDataComplete[i].address} email={this.state.UserDataComplete[i].email} Dob={this.state.UserDataComplete[i].Dob} cellNumber={this.state.UserDataComplete[i].cellNumber} picture={this.state.UserDataComplete[i].picture} />)\n                }\n                return tempDatatoShow;\n            }\n            else {\n                return (<div></div>)\n            }\n        }\n        if(cat === 2){\n            if(this.state.UserDataIncomplete[0]){\n                let tempDatatoShow = [];\n                tempDatatoShow.push(<div key=\"countIncomp\"><h3>Count : {this.state.UserDataIncomplete.length}</h3></div>);\n                let start = ((this.state.currentPage2-1)*this.state.pageSize);\n                let end = start+this.state.pageSize;\n                let lastPage = this.state.UserDataIncomplete.length/this.state.pageSize\n                for(let i = start ; i < end ; ++i){\n                    tempDatatoShow.push(<IdComponent key={this.state.UserDataIncomplete[i].name + i } delData={this.delData} catagory={cat} index={i} editData={this.editData} first={this.state.firstPage} last={lastPage} currentPage={this.state.currentPage2} name={this.state.UserDataIncomplete[i].name} address={this.state.UserDataIncomplete[i].address} email={this.state.UserDataIncomplete[i].email} Dob={this.state.UserDataIncomplete[i].Dob} cellNumber={this.state.UserDataIncomplete[i].cellNumber} picture={this.state.UserDataIncomplete[i].picture} />)\n                }\n                return tempDatatoShow;\n            }\n            else {\n                return (<div></div>)\n            }\n\n        }\n    }\n    paginationshift = (dat , cat)=>{\n        if(dat === '-1'){\n            if(cat === 1){\n                let prevCurentPage = this.state.currentPage;\n                this.setState({currentPage : prevCurentPage-1});\n            }\n            if(cat === 2){\n                let prevCurentPage = this.state.currentPage2;\n                this.setState({currentPage2 : prevCurentPage-1});\n            }\n        }\n        else if(dat === '+1'){\n            if(cat === 1){\n                let prevCurentPage = this.state.currentPage;\n                this.setState({currentPage : prevCurentPage+1});\n            }\n            if(cat === 2){\n                let prevCurentPage = this.state.currentPage2;\n                this.setState({currentPage2 : prevCurentPage+1});\n            }\n        }\n        else if(dat === '1'){\n            if(cat === 1){\n                this.setState({currentPage : 1});\n            }\n            if(cat === 2){\n                this.setState({currentPage2 : 1});\n            }\n        }\n        else if(dat === 'e'){\n            if(cat === 1){\n                let lastPage = this.state.UserDataComplete.length/this.state.pageSize;\n                this.setState({currentPage : lastPage});\n            }\n            if(cat === 2){\n                let lastPage = this.state.UserDataIncomplete.length/this.state.pageSize;\n                this.setState({currentPage2 : lastPage});\n            }\n        }\n    }\n    renderPag = (cat)=>{\n        if(cat === 1){\n            //this.setState({lastpage : this.state.UserDataComplete.length/this.state.pageSize});\n            return (\n                <div className='pagination'>\n                    <div onClick={() => {this.paginationshift('1' , 1)}} className=\"PagButton\">First</div>\n                    <div onClick={()=>{this.paginationshift('-1' , 1)}} className=\"PagButton\" ref={prev => this.prev = prev} > Prev </div>\n                    <div className=\"PagButton selected\"> {this.state.currentPage} </div>\n                    <div onClick={()=>{this.paginationshift('+1' , 1)}} className=\"PagButton\" ref={next => this.next = next} > Next </div>\n                    <div onClick={()=>{this.paginationshift('e' , 1)}} className=\"PagButton\">Last</div>\n                </div>\n            )\n        }\n        if(cat === 2){\n            //this.setState({lastpage2 : this.state.UserDataIncomplete.length/this.state.pageSize});\n            return (\n                <div className='pagination'>\n                    <div onClick={() => {this.paginationshift('1' , 2)}} className=\"PagButton\">First</div>\n                    <div onClick={()=>{this.paginationshift('-1' , 2)}} className=\"PagButton\" ref={prev1 => this.prev1 = prev1}> Prev </div>\n                    <div className=\"PagButton selected\"> {this.state.currentPage2} </div>\n                    <div onClick={()=>{this.paginationshift('+1' , 2)}} className=\"PagButton\" ref={next1 => this.next1 = next1} > Next </div>\n                    <div onClick={()=>{this.paginationshift('e' , 2)}} className=\"PagButton\">Last</div>\n                </div>\n            )\n        }\n    }\n    render(){\n        return(\n            <div>\n                <div className='bar'>Id Cards</div>\n                <div className='headerDiv'>\n                    \n                </div>\n                <div className='renderDiv' id='RenderDiv' ref={renderDiv => this.renderDiv = renderDiv}>\n                    <div className='complete sub'>\n                        <div><h3>Complete Cards</h3></div>\n                        {this.renderOb(1)}\n                        {this.renderPag(1)}\n                    </div>\n                    <div className='incomplete sub'>\n                        <div><h3>Incomplete Cards</h3></div>\n                        {this.renderOb(2)}\n                        {this.renderPag(2)}\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './App.css';\nimport MainComponet from \"./main-component/mainComponent\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainComponet />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}